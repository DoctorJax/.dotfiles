#! /bin/bash

#define icons for workspaces 1-9
ic=(0     輸    )

#initial check for occupied workspaces
initialcheck() {
for num in $(hyprctl -j workspaces | jaq -r '.[].id'); do
  export o"$num"="occupied"
done
 
#initial check for focused workspace
for num in $(hyprctl -j monitors | jaq -r '.[] | select(.focused == true) | .activeWorkspace.id'); do
  export f"$num"="focused"
  export fnum=f"$num"
  export mon=$(hyprctl -j monitors | jaq -r ".[] | select(.activeWorkspace.id == $num) | .name")
done
}

workspaces() {
if [[ ${1:0:9} == "workspace" ]]; then #set focused workspace
  unset -v "$fnum" 
  num=${1:11}
  export f"$num"="focused"
  export fnum=f"$num"

elif [[ ${1:0:10} == "focusedmon" ]]; then #set focused workspace following monitor focus change
  unset -v "$fnum"
  string=${1:12}
  num=${string##*,}
  export mon=${string/,*/}
  export f"$num"="focused"
  export fnum=f"$num"

elif [[ ${1:0:13} == "moveworkspace" ]] && [[ ${1##*,} == "$mon" ]]; then #Set focused workspace following swapactiveworkspace
  unset -v "$fnum"
  string=${1:15}
  num=${string/,*/}
  export f"$num"="focused"
  export fnum=f"$num"

elif [[ ${1:0:15} == "createworkspace" ]]; then #set Occupied workspace
  num=${1:17}
  export o"$num"="occupied"
  export onum=o"$num"

elif [[ ${1:0:16} == "destroyworkspace" ]]; then #unset unoccupied workspace
  num=${1:18}
  unset -v o"$num"
fi
}
module() {
#output eww widget
echo 	"(eventbox :onscroll \"echo {} | sed -e 's/up/-1/g' -e 's/down/+1/g' | xargs hyprctl dispatch workspace\" \
          (box	:class \"works\"	:orientation \"h\" :spacing 0 :space-evenly \"false\" \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 1\'\" :onrightclick \"hyprctl dispatch workspace 1\" :class \"ws-1 $o1 $f1 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 2\'\" :onrightclick \"hyprctl dispatch workspace 2\" :class \"ws-2 $o2 $f2 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 3\'\" :onrightclick \"hyprctl dispatch workspace 3\" :class \"ws-3 $o3 $f3 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 4\'\" :onrightclick \"hyprctl dispatch workspace 4\" :class \"ws-4 $o4 $f4 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 5\'\" :onrightclick \"hyprctl dispatch workspace 5\" :class \"ws-5 $o5 $f5 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 6\'\" :onrightclick \"hyprctl dispatch workspace 6\" :class \"ws-6 $o6 $f6 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 7\'\" :onrightclick \"hyprctl dispatch workspace 7\" :class \"ws-7 $o7 $f7 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 8\'\" :onrightclick \"hyprctl dispatch workspace 8\" :class \"ws-8 $o8 $f8 workspacebuttons\" \" \") \
              (button :onclick \"hyprctl dispatch exec \'~/.local/share/cargo/bin/hyprsome workspace 9\'\" :onrightclick \"hyprctl dispatch workspace 9\" :class \"ws-9 $o9 $f9 workspacebuttons\" \" \") \
          )\
        )"
}

# actually running things
initialcheck
module

socat -u UNIX-CONNECT:/tmp/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock - | while read -r event; do 
workspaces "$event"
module
done
